{
  "version": 3,
  "sources": ["../../@iankibetsh/vue-streamline/src/composables/useStreamline.js", "../../@iankibetsh/vue-streamline/src/plugins/streamline.js"],
  "sourcesContent": ["import Axios from 'axios';\nimport { inject, onMounted, reactive, ref } from 'vue';\n\nconst useStreamline = (stream, ...initialArgs) => {\n    let formData = {};\n    const loading = ref(false);\n    const propertiesFetched = ref(false);\n    const fetching = ref(false);\n    // cache key for local storage, include initialArgs in the key\n    const cacheKey = `streamline_${stream}_${initialArgs.join('_')}`;\n\n    // Inject headers and API endpoint\n    const streamlineUrl = inject('streamlineUrl');\n    const streamlineHeaders = inject('streamlineHeaders');\n    const enableCache = inject('enableCache');\n\n    const originalProps = reactive({});\n\n// Proxy to intercept access\n    const props = new Proxy(originalProps, {\n        get(target, property, receiver) {\n            if(!propertiesFetched.value) {\n                fetchServiceProperties().then(() => target[property]);\n            }\n            return Reflect.get(target, property, receiver); // Return the actual value\n        },\n        set(target, property, value, receiver) {\n            return Reflect.set(target, property, value, receiver); // Update the value\n        }\n    })\n    const axios = Axios.create({\n        headers: {\n            ...streamlineHeaders,\n        },\n    });\n\n    const fetchServiceProperties = async () => {\n        if (loading.value || fetching.value || propertiesFetched.value) return;\n        fetching.value = true;\n\n        try {\n            loading.value = true;\n            const response = await axios.post(streamlineUrl, {\n                action: 'onMounted',\n                stream,\n                params: initialArgs,\n            });\n            assignProperties(response.data);\n            enableCache && localStorage.setItem(cacheKey, JSON.stringify(response.data));\n        } catch (error) {\n            console.error(`Error fetching properties for stream ${stream}`, error);\n            throw error;\n        } finally {\n            propertiesFetched.value = true;\n            fetching.value = false;\n            loading.value = false;\n        }\n    };\n\n    const assignProperties = (data) => {\n        Object.assign(service, data.properties); // Assign the properties to the reactive service object\n        Object.assign(originalProps, data.properties); // Assign the properties to the reactive service object\n    };\n\n    const handler = {\n        get(target, prop, receiver) {\n            // Fetch properties if not already fetched\n            if (!propertiesFetched.value && !loading.value) {\n                fetchServiceProperties().then(() => target[prop]);\n            }\n\n            // Handle existing properties\n            if (prop in target) {\n                return target[prop];\n            }\n            // Handle nonexistent properties or dynamic methods\n            return (...args) => {\n                loading.value = true;\n                return axios\n                    .post(streamlineUrl, {\n                        action: prop,\n                        stream,\n                        ...formData,\n                        params: args,\n                    })\n                    .then((response) => {\n                        loading.value = false;\n                        return response.data;\n                    })\n                    .catch((error) => {\n                        loading.value = false;\n                        console.error(`Error calling ${prop} on stream ${stream}`, error);\n                        throw error;\n                    });\n            };\n        },\n    };\n\n    const getActionUrl = (action, ...args) => {\n        // console.log('getActionUrl called with:', action, args);\n        const post = {\n            action,\n            stream,\n            params: args,\n        };\n        return `${streamlineUrl}?${new URLSearchParams(post).toString()}`;\n    };\n\n    const service = reactive({}); // Make the service object reactive\n\n    onMounted(() => {\n        if (!enableCache) return;\n        const cachedData = localStorage.getItem(cacheKey);\n        if (cachedData) {\n            assignProperties(JSON.parse(cachedData));\n        }\n        if (initialArgs.length > 0) {\n            fetchServiceProperties();\n        }\n\n    });\n\n    return {\n        loading,\n        service: new Proxy(service, handler),\n        getActionUrl,\n        props\n    };\n};\n\nexport default useStreamline;\n", "const streamline = {\n    install(app, options) {\n        app.provide('streamlineUrl', options.streamlineUrl)\n        app.provide('streamlineHeaders', options.streamlineHeaders)\n        app.provide('enableCache', options.enableCache)\n    }\n}\n\nexport default streamline"],
  "mappings": "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",
  "names": []
}
